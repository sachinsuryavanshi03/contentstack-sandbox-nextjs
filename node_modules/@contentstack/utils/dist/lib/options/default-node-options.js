var _a;
import MarkType from "../nodes/mark-type";
import NodeType from "../nodes/node-type";
export var defaultNodeOption = (_a = {},
    _a[NodeType.DOCUMENT] = function (node) {
        return "";
    },
    _a[NodeType.PARAGRAPH] = function (node, next) {
        return "<p>".concat(next(node.children), "</p>");
    },
    _a[NodeType.LINK] = function (node, next) {
        return "<a href=\"".concat(node.attrs.href || node.attrs.url, "\">").concat(next(node.children), "</a>");
    },
    _a[NodeType.IMAGE] = function (node, next) {
        return "<img src=\"".concat(node.attrs.src || node.attrs.url, "\" />").concat(next(node.children));
    },
    _a[NodeType.EMBED] = function (node, next) {
        return "<iframe src=\"".concat(node.attrs.src || node.attrs.url, "\">").concat(next(node.children), "</iframe>");
    },
    _a[NodeType.HEADING_1] = function (node, next) {
        return "<h1>".concat(next(node.children), "</h1>");
    },
    _a[NodeType.HEADING_2] = function (node, next) {
        return "<h2>".concat(next(node.children), "</h2>");
    },
    _a[NodeType.HEADING_3] = function (node, next) {
        return "<h3>".concat(next(node.children), "</h3>");
    },
    _a[NodeType.HEADING_4] = function (node, next) {
        return "<h4>".concat(next(node.children), "</h4>");
    },
    _a[NodeType.HEADING_5] = function (node, next) {
        return "<h5>".concat(next(node.children), "</h5>");
    },
    _a[NodeType.HEADING_6] = function (node, next) {
        return "<h6>".concat(next(node.children), "</h6>");
    },
    _a[NodeType.ORDER_LIST] = function (node, next) {
        return "<ol>".concat(next(node.children), "</ol>");
    },
    _a[NodeType.UNORDER_LIST] = function (node, next) {
        return "<ul>".concat(next(node.children), "</ul>");
    },
    _a[NodeType.LIST_ITEM] = function (node, next) {
        return "<li>".concat(next(node.children), "</li>");
    },
    _a[NodeType.HR] = function (node, next) {
        return "<hr>";
    },
    _a[NodeType.TABLE] = function (node, next) {
        return "<table>".concat(next(node.children), "</table>");
    },
    _a[NodeType.TABLE_HEADER] = function (node, next) {
        return "<thead>".concat(next(node.children), "</thead>");
    },
    _a[NodeType.TABLE_BODY] = function (node, next) {
        return "<tbody>".concat(next(node.children), "</tbody>");
    },
    _a[NodeType.TABLE_FOOTER] = function (node, next) {
        return "<tfoot>".concat(next(node.children), "</tfoot>");
    },
    _a[NodeType.TABLE_ROW] = function (node, next) {
        return "<tr>".concat(next(node.children), "</tr>");
    },
    _a[NodeType.TABLE_HEAD] = function (node, next) {
        return "<th>".concat(next(node.children), "</th>");
    },
    _a[NodeType.TABLE_DATA] = function (node, next) {
        return "<td>".concat(next(node.children), "</td>");
    },
    _a[NodeType.BLOCK_QUOTE] = function (node, next) {
        return "<blockquote>".concat(next(node.children), "</blockquote>");
    },
    _a[NodeType.CODE] = function (node, next) {
        return "<code>".concat(next(node.children), "</code>");
    },
    _a['reference'] = function (node, next) {
        return "";
    },
    _a['default'] = function (node, next) {
        return next(node.children);
    },
    _a[MarkType.BOLD] = function (text) {
        return "<strong>".concat(text, "</strong>");
    },
    _a[MarkType.ITALIC] = function (text) {
        return "<em>".concat(text, "</em>");
    },
    _a[MarkType.UNDERLINE] = function (text) {
        return "<u>".concat(text, "</u>");
    },
    _a[MarkType.STRIKE_THROUGH] = function (text) {
        return "<strike>".concat(text, "</strike>");
    },
    _a[MarkType.INLINE_CODE] = function (text) {
        return "<span>".concat(text, "</span>");
    },
    _a[MarkType.SUBSCRIPT] = function (text) {
        return "<sub>".concat(text, "</sub>");
    },
    _a[MarkType.SUPERSCRIPT] = function (text) {
        return "<sup>".concat(text, "</sup>");
    },
    _a);
//# sourceMappingURL=default-node-options.js.map